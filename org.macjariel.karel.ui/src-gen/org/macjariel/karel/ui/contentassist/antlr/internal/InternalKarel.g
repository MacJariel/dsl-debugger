/*
* generated by Xtext
*/
grammar InternalKarel;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.macjariel.karel.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.macjariel.karel.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.macjariel.karel.services.KarelGrammarAccess;

}

@parser::members {
 
 	private KarelGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(KarelGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitSection
entryRuleInitSection 
:
{ before(grammarAccess.getInitSectionRule()); }
	 ruleInitSection
{ after(grammarAccess.getInitSectionRule()); } 
	 EOF 
;

// Rule InitSection
ruleInitSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitSectionAccess().getGroup()); }
(rule__InitSection__Group__0)
{ after(grammarAccess.getInitSectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitCommand
entryRuleInitCommand 
:
{ before(grammarAccess.getInitCommandRule()); }
	 ruleInitCommand
{ after(grammarAccess.getInitCommandRule()); } 
	 EOF 
;

// Rule InitCommand
ruleInitCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitCommandAccess().getAlternatives()); }
(rule__InitCommand__Alternatives)
{ after(grammarAccess.getInitCommandAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitPositionCommand
entryRuleInitPositionCommand 
:
{ before(grammarAccess.getInitPositionCommandRule()); }
	 ruleInitPositionCommand
{ after(grammarAccess.getInitPositionCommandRule()); } 
	 EOF 
;

// Rule InitPositionCommand
ruleInitPositionCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitPositionCommandAccess().getGroup()); }
(rule__InitPositionCommand__Group__0)
{ after(grammarAccess.getInitPositionCommandAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitHeadingCommand
entryRuleInitHeadingCommand 
:
{ before(grammarAccess.getInitHeadingCommandRule()); }
	 ruleInitHeadingCommand
{ after(grammarAccess.getInitHeadingCommandRule()); } 
	 EOF 
;

// Rule InitHeadingCommand
ruleInitHeadingCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitHeadingCommandAccess().getGroup()); }
(rule__InitHeadingCommand__Group__0)
{ after(grammarAccess.getInitHeadingCommandAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitBoardSizeCommand
entryRuleInitBoardSizeCommand 
:
{ before(grammarAccess.getInitBoardSizeCommandRule()); }
	 ruleInitBoardSizeCommand
{ after(grammarAccess.getInitBoardSizeCommandRule()); } 
	 EOF 
;

// Rule InitBoardSizeCommand
ruleInitBoardSizeCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitBoardSizeCommandAccess().getGroup()); }
(rule__InitBoardSizeCommand__Group__0)
{ after(grammarAccess.getInitBoardSizeCommandAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHeadingKind
entryRuleHeadingKind 
:
{ before(grammarAccess.getHeadingKindRule()); }
	 ruleHeadingKind
{ after(grammarAccess.getHeadingKindRule()); } 
	 EOF 
;

// Rule HeadingKind
ruleHeadingKind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHeadingKindAccess().getAlternatives()); }
(rule__HeadingKind__Alternatives)
{ after(grammarAccess.getHeadingKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUserDefinedCommand
entryRuleUserDefinedCommand 
:
{ before(grammarAccess.getUserDefinedCommandRule()); }
	 ruleUserDefinedCommand
{ after(grammarAccess.getUserDefinedCommandRule()); } 
	 EOF 
;

// Rule UserDefinedCommand
ruleUserDefinedCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUserDefinedCommandAccess().getGroup()); }
(rule__UserDefinedCommand__Group__0)
{ after(grammarAccess.getUserDefinedCommandAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMain
entryRuleMain 
:
{ before(grammarAccess.getMainRule()); }
	 ruleMain
{ after(grammarAccess.getMainRule()); } 
	 EOF 
;

// Rule Main
ruleMain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMainAccess().getGroup()); }
(rule__Main__Group__0)
{ after(grammarAccess.getMainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUserDefinedCommandStatement
entryRuleUserDefinedCommandStatement 
:
{ before(grammarAccess.getUserDefinedCommandStatementRule()); }
	 ruleUserDefinedCommandStatement
{ after(grammarAccess.getUserDefinedCommandStatementRule()); } 
	 EOF 
;

// Rule UserDefinedCommandStatement
ruleUserDefinedCommandStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUserDefinedCommandStatementAccess().getGroup()); }
(rule__UserDefinedCommandStatement__Group__0)
{ after(grammarAccess.getUserDefinedCommandStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIterateStatement
entryRuleIterateStatement 
:
{ before(grammarAccess.getIterateStatementRule()); }
	 ruleIterateStatement
{ after(grammarAccess.getIterateStatementRule()); } 
	 EOF 
;

// Rule IterateStatement
ruleIterateStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIterateStatementAccess().getGroup()); }
(rule__IterateStatement__Group__0)
{ after(grammarAccess.getIterateStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileStatement
entryRuleWhileStatement 
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
(rule__WhileStatement__Group__0)
{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDocumentationComment
entryRuleDocumentationComment 
:
{ before(grammarAccess.getDocumentationCommentRule()); }
	 ruleDocumentationComment
{ after(grammarAccess.getDocumentationCommentRule()); } 
	 EOF 
;

// Rule DocumentationComment
ruleDocumentationComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDocumentationCommentAccess().getGroup()); }
(rule__DocumentationComment__Group__0)
{ after(grammarAccess.getDocumentationCommentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommandStatement
entryRuleCommandStatement 
:
{ before(grammarAccess.getCommandStatementRule()); }
	 ruleCommandStatement
{ after(grammarAccess.getCommandStatementRule()); } 
	 EOF 
;

// Rule CommandStatement
ruleCommandStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandStatementAccess().getGroup()); }
(rule__CommandStatement__Group__0)
{ after(grammarAccess.getCommandStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommandKind
entryRuleCommandKind 
:
{ before(grammarAccess.getCommandKindRule()); }
	 ruleCommandKind
{ after(grammarAccess.getCommandKindRule()); } 
	 EOF 
;

// Rule CommandKind
ruleCommandKind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandKindAccess().getAlternatives()); }
(rule__CommandKind__Alternatives)
{ after(grammarAccess.getCommandKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionExpr
entryRuleConditionExpr 
:
{ before(grammarAccess.getConditionExprRule()); }
	 ruleConditionExpr
{ after(grammarAccess.getConditionExprRule()); } 
	 EOF 
;

// Rule ConditionExpr
ruleConditionExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionExprAccess().getGroup()); }
(rule__ConditionExpr__Group__0)
{ after(grammarAccess.getConditionExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionKind
entryRuleConditionKind 
:
{ before(grammarAccess.getConditionKindRule()); }
	 ruleConditionKind
{ after(grammarAccess.getConditionKindRule()); } 
	 EOF 
;

// Rule ConditionKind
ruleConditionKind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionKindAccess().getAlternatives()); }
(rule__ConditionKind__Alternatives)
{ after(grammarAccess.getConditionKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__InitCommand__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitCommandAccess().getInitPositionCommandParserRuleCall_0()); }
	ruleInitPositionCommand
{ after(grammarAccess.getInitCommandAccess().getInitPositionCommandParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInitCommandAccess().getInitHeadingCommandParserRuleCall_1()); }
	ruleInitHeadingCommand
{ after(grammarAccess.getInitCommandAccess().getInitHeadingCommandParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInitCommandAccess().getInitBoardSizeCommandParserRuleCall_2()); }
	ruleInitBoardSizeCommand
{ after(grammarAccess.getInitCommandAccess().getInitBoardSizeCommandParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingKindAccess().getNORTHKeyword_0()); }

	'NORTH' 

{ after(grammarAccess.getHeadingKindAccess().getNORTHKeyword_0()); }
)

    |(
{ before(grammarAccess.getHeadingKindAccess().getSOUTHKeyword_1()); }

	'SOUTH' 

{ after(grammarAccess.getHeadingKindAccess().getSOUTHKeyword_1()); }
)

    |(
{ before(grammarAccess.getHeadingKindAccess().getWESTKeyword_2()); }

	'WEST' 

{ after(grammarAccess.getHeadingKindAccess().getWESTKeyword_2()); }
)

    |(
{ before(grammarAccess.getHeadingKindAccess().getEASTKeyword_3()); }

	'EAST' 

{ after(grammarAccess.getHeadingKindAccess().getEASTKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0()); }
	ruleIfStatement
{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIterateStatementParserRuleCall_1()); }
	ruleIterateStatement
{ after(grammarAccess.getStatementAccess().getIterateStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_2()); }
	ruleWhileStatement
{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getCommandStatementParserRuleCall_3()); }
	ruleCommandStatement
{ after(grammarAccess.getStatementAccess().getCommandStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getUserDefinedCommandStatementParserRuleCall_4()); }
	ruleUserDefinedCommandStatement
{ after(grammarAccess.getStatementAccess().getUserDefinedCommandStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandKindAccess().getMoveKeyword_0()); }

	'move' 

{ after(grammarAccess.getCommandKindAccess().getMoveKeyword_0()); }
)

    |(
{ before(grammarAccess.getCommandKindAccess().getTurnKeyword_1()); }

	'turn' 

{ after(grammarAccess.getCommandKindAccess().getTurnKeyword_1()); }
)

    |(
{ before(grammarAccess.getCommandKindAccess().getTurnOnKeyword_2()); }

	'turnOn' 

{ after(grammarAccess.getCommandKindAccess().getTurnOnKeyword_2()); }
)

    |(
{ before(grammarAccess.getCommandKindAccess().getTurnOffKeyword_3()); }

	'turnOff' 

{ after(grammarAccess.getCommandKindAccess().getTurnOffKeyword_3()); }
)

    |(
{ before(grammarAccess.getCommandKindAccess().getPutKeyword_4()); }

	'put' 

{ after(grammarAccess.getCommandKindAccess().getPutKeyword_4()); }
)

    |(
{ before(grammarAccess.getCommandKindAccess().getGetKeyword_5()); }

	'get' 

{ after(grammarAccess.getCommandKindAccess().getGetKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionKindAccess().getWALL_AHEADKeyword_0()); }

	'WALL_AHEAD' 

{ after(grammarAccess.getConditionKindAccess().getWALL_AHEADKeyword_0()); }
)

    |(
{ before(grammarAccess.getConditionKindAccess().getMARKED_PLACEKeyword_1()); }

	'MARKED_PLACE' 

{ after(grammarAccess.getConditionKindAccess().getMARKED_PLACEKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getBEGINPROGRAMKeyword_0()); }

	'BEGIN-PROGRAM' 

{ after(grammarAccess.getProgramAccess().getBEGINPROGRAMKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getInitSectionAssignment_1()); }
(rule__Program__InitSectionAssignment_1)?
{ after(grammarAccess.getProgramAccess().getInitSectionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getUserDefinedCommandsAssignment_2()); }
(rule__Program__UserDefinedCommandsAssignment_2)*
{ after(grammarAccess.getProgramAccess().getUserDefinedCommandsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getMainAssignment_3()); }
(rule__Program__MainAssignment_3)
{ after(grammarAccess.getProgramAccess().getMainAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getENDPROGRAMKeyword_4()); }

	'END-PROGRAM' 

{ after(grammarAccess.getProgramAccess().getENDPROGRAMKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InitSection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitSection__Group__0__Impl
	rule__InitSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitSection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitSectionAccess().getBEGININITKeyword_0()); }

	'BEGIN-INIT' 

{ after(grammarAccess.getInitSectionAccess().getBEGININITKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitSection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitSection__Group__1__Impl
	rule__InitSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitSection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getInitSectionAccess().getInitCommandsAssignment_1()); }
(rule__InitSection__InitCommandsAssignment_1)
{ after(grammarAccess.getInitSectionAccess().getInitCommandsAssignment_1()); }
)
(
{ before(grammarAccess.getInitSectionAccess().getInitCommandsAssignment_1()); }
(rule__InitSection__InitCommandsAssignment_1)*
{ after(grammarAccess.getInitSectionAccess().getInitCommandsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitSection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitSection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitSection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitSectionAccess().getENDINITKeyword_2()); }

	'END-INIT' 

{ after(grammarAccess.getInitSectionAccess().getENDINITKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InitPositionCommand__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitPositionCommand__Group__0__Impl
	rule__InitPositionCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitPositionCommand__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitPositionCommandAccess().getPositionKeyword_0()); }

	'position' 

{ after(grammarAccess.getInitPositionCommandAccess().getPositionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitPositionCommand__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitPositionCommand__Group__1__Impl
	rule__InitPositionCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitPositionCommand__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitPositionCommandAccess().getXAssignment_1()); }
(rule__InitPositionCommand__XAssignment_1)
{ after(grammarAccess.getInitPositionCommandAccess().getXAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitPositionCommand__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitPositionCommand__Group__2__Impl
	rule__InitPositionCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitPositionCommand__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitPositionCommandAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getInitPositionCommandAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitPositionCommand__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitPositionCommand__Group__3__Impl
	rule__InitPositionCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InitPositionCommand__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitPositionCommandAccess().getYAssignment_3()); }
(rule__InitPositionCommand__YAssignment_3)
{ after(grammarAccess.getInitPositionCommandAccess().getYAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitPositionCommand__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitPositionCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitPositionCommand__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitPositionCommandAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getInitPositionCommandAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InitHeadingCommand__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitHeadingCommand__Group__0__Impl
	rule__InitHeadingCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitHeadingCommand__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitHeadingCommandAccess().getHeadingKeyword_0()); }

	'heading' 

{ after(grammarAccess.getInitHeadingCommandAccess().getHeadingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitHeadingCommand__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitHeadingCommand__Group__1__Impl
	rule__InitHeadingCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitHeadingCommand__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitHeadingCommandAccess().getHeadingAssignment_1()); }
(rule__InitHeadingCommand__HeadingAssignment_1)
{ after(grammarAccess.getInitHeadingCommandAccess().getHeadingAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitHeadingCommand__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitHeadingCommand__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitHeadingCommand__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitHeadingCommandAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getInitHeadingCommandAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InitBoardSizeCommand__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBoardSizeCommand__Group__0__Impl
	rule__InitBoardSizeCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBoardSizeCommand__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBoardSizeCommandAccess().getBoardSizeKeyword_0()); }

	'boardSize' 

{ after(grammarAccess.getInitBoardSizeCommandAccess().getBoardSizeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBoardSizeCommand__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBoardSizeCommand__Group__1__Impl
	rule__InitBoardSizeCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBoardSizeCommand__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBoardSizeCommandAccess().getWidthAssignment_1()); }
(rule__InitBoardSizeCommand__WidthAssignment_1)
{ after(grammarAccess.getInitBoardSizeCommandAccess().getWidthAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBoardSizeCommand__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBoardSizeCommand__Group__2__Impl
	rule__InitBoardSizeCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBoardSizeCommand__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBoardSizeCommandAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getInitBoardSizeCommandAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBoardSizeCommand__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBoardSizeCommand__Group__3__Impl
	rule__InitBoardSizeCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBoardSizeCommand__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBoardSizeCommandAccess().getHeightAssignment_3()); }
(rule__InitBoardSizeCommand__HeightAssignment_3)
{ after(grammarAccess.getInitBoardSizeCommandAccess().getHeightAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBoardSizeCommand__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBoardSizeCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBoardSizeCommand__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBoardSizeCommandAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getInitBoardSizeCommandAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UserDefinedCommand__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedCommand__Group__0__Impl
	rule__UserDefinedCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedCommand__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedCommandAccess().getDocAssignment_0()); }
(rule__UserDefinedCommand__DocAssignment_0)?
{ after(grammarAccess.getUserDefinedCommandAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedCommand__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedCommand__Group__1__Impl
	rule__UserDefinedCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedCommand__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedCommandAccess().getDEFINECOMMANDKeyword_1()); }

	'DEFINE COMMAND' 

{ after(grammarAccess.getUserDefinedCommandAccess().getDEFINECOMMANDKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedCommand__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedCommand__Group__2__Impl
	rule__UserDefinedCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedCommand__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedCommandAccess().getNameAssignment_2()); }
(rule__UserDefinedCommand__NameAssignment_2)
{ after(grammarAccess.getUserDefinedCommandAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedCommand__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedCommand__Group__3__Impl
	rule__UserDefinedCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedCommand__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedCommandAccess().getASKeyword_3()); }

	'AS' 

{ after(grammarAccess.getUserDefinedCommandAccess().getASKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedCommand__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedCommand__Group__4__Impl
	rule__UserDefinedCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedCommand__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedCommandAccess().getBEGINKeyword_4()); }

	'BEGIN' 

{ after(grammarAccess.getUserDefinedCommandAccess().getBEGINKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedCommand__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedCommand__Group__5__Impl
	rule__UserDefinedCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedCommand__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedCommandAccess().getStatementsAssignment_5()); }
(rule__UserDefinedCommand__StatementsAssignment_5)*
{ after(grammarAccess.getUserDefinedCommandAccess().getStatementsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedCommand__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedCommand__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedCommand__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedCommandAccess().getENDKeyword_6()); }

	'END' 

{ after(grammarAccess.getUserDefinedCommandAccess().getENDKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Main__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__0__Impl
	rule__Main__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getMainAction_0()); }
(

)
{ after(grammarAccess.getMainAccess().getMainAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__1__Impl
	rule__Main__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getBEGINMAINKeyword_1()); }

	'BEGIN-MAIN' 

{ after(grammarAccess.getMainAccess().getBEGINMAINKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__2__Impl
	rule__Main__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getStatementsAssignment_2()); }
(rule__Main__StatementsAssignment_2)*
{ after(grammarAccess.getMainAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getENDMAINKeyword_3()); }

	'END-MAIN' 

{ after(grammarAccess.getMainAccess().getENDMAINKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UserDefinedCommandStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedCommandStatement__Group__0__Impl
	rule__UserDefinedCommandStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedCommandStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedCommandStatementAccess().getCommandAssignment_0()); }
(rule__UserDefinedCommandStatement__CommandAssignment_0)
{ after(grammarAccess.getUserDefinedCommandStatementAccess().getCommandAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedCommandStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedCommandStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedCommandStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedCommandStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getUserDefinedCommandStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIFKeyword_0()); }

	'IF' 

{ after(grammarAccess.getIfStatementAccess().getIFKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getConditionAssignment_2()); }
(rule__IfStatement__ConditionAssignment_2)
{ after(grammarAccess.getIfStatementAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getIfStatementAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__5__Impl
	rule__IfStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getStatementsAssignment_5()); }
(rule__IfStatement__StatementsAssignment_5)*
{ after(grammarAccess.getIfStatementAccess().getStatementsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__6__Impl
	rule__IfStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getIfStatementAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_7()); }
(rule__IfStatement__Group_7__0)?
{ after(grammarAccess.getIfStatementAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__IfStatement__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_7__0__Impl
	rule__IfStatement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getELSEKeyword_7_0()); }

	'ELSE' 

{ after(grammarAccess.getIfStatementAccess().getELSEKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_7__1__Impl
	rule__IfStatement__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLeftCurlyBracketKeyword_7_1()); }

	'{' 

{ after(grammarAccess.getIfStatementAccess().getLeftCurlyBracketKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_7__2__Impl
	rule__IfStatement__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseStatementsAssignment_7_2()); }
(rule__IfStatement__ElseStatementsAssignment_7_2)*
{ after(grammarAccess.getIfStatementAccess().getElseStatementsAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRightCurlyBracketKeyword_7_3()); }

	'}' 

{ after(grammarAccess.getIfStatementAccess().getRightCurlyBracketKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IterateStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateStatement__Group__0__Impl
	rule__IterateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateStatementAccess().getITERATEKeyword_0()); }

	'ITERATE' 

{ after(grammarAccess.getIterateStatementAccess().getITERATEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterateStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateStatement__Group__1__Impl
	rule__IterateStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateStatementAccess().getTimesAssignment_1()); }
(rule__IterateStatement__TimesAssignment_1)
{ after(grammarAccess.getIterateStatementAccess().getTimesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterateStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateStatement__Group__2__Impl
	rule__IterateStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateStatementAccess().getTIMESKeyword_2()); }

	'TIMES' 

{ after(grammarAccess.getIterateStatementAccess().getTIMESKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterateStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateStatement__Group__3__Impl
	rule__IterateStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateStatementAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getIterateStatementAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterateStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateStatement__Group__4__Impl
	rule__IterateStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateStatementAccess().getStatementsAssignment_4()); }
(rule__IterateStatement__StatementsAssignment_4)
{ after(grammarAccess.getIterateStatementAccess().getStatementsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterateStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateStatementAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getIterateStatementAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__WhileStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWHILEKeyword_0()); }

	'WHILE' 

{ after(grammarAccess.getWhileStatementAccess().getWHILEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getConditionAssignment_2()); }
(rule__WhileStatement__ConditionAssignment_2)
{ after(grammarAccess.getWhileStatementAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__4__Impl
	rule__WhileStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getWhileStatementAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__5__Impl
	rule__WhileStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getStatementsAssignment_5()); }
(rule__WhileStatement__StatementsAssignment_5)
{ after(grammarAccess.getWhileStatementAccess().getStatementsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getWhileStatementAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__DocumentationComment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DocumentationComment__Group__0__Impl
	rule__DocumentationComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentationCommentAccess().getCommercialAtLeftParenthesisKeyword_0()); }

	'@(' 

{ after(grammarAccess.getDocumentationCommentAccess().getCommercialAtLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DocumentationComment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DocumentationComment__Group__1__Impl
	rule__DocumentationComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentationCommentAccess().getTextAssignment_1()); }
(rule__DocumentationComment__TextAssignment_1)
{ after(grammarAccess.getDocumentationCommentAccess().getTextAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DocumentationComment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DocumentationComment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentationCommentAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getDocumentationCommentAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CommandStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandStatement__Group__0__Impl
	rule__CommandStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandStatementAccess().getKindAssignment_0()); }
(rule__CommandStatement__KindAssignment_0)
{ after(grammarAccess.getCommandStatementAccess().getKindAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getCommandStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpr__Group__0__Impl
	rule__ConditionExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExprAccess().getNegationAssignment_0()); }
(rule__ConditionExpr__NegationAssignment_0)
{ after(grammarAccess.getConditionExprAccess().getNegationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExprAccess().getExprAssignment_1()); }
(rule__ConditionExpr__ExprAssignment_1)
{ after(grammarAccess.getConditionExprAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Program__InitSectionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getInitSectionInitSectionParserRuleCall_1_0()); }
	ruleInitSection{ after(grammarAccess.getProgramAccess().getInitSectionInitSectionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__UserDefinedCommandsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getUserDefinedCommandsUserDefinedCommandParserRuleCall_2_0()); }
	ruleUserDefinedCommand{ after(grammarAccess.getProgramAccess().getUserDefinedCommandsUserDefinedCommandParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__MainAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getMainMainParserRuleCall_3_0()); }
	ruleMain{ after(grammarAccess.getProgramAccess().getMainMainParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitSection__InitCommandsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitSectionAccess().getInitCommandsInitCommandParserRuleCall_1_0()); }
	ruleInitCommand{ after(grammarAccess.getInitSectionAccess().getInitCommandsInitCommandParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitPositionCommand__XAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitPositionCommandAccess().getXINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getInitPositionCommandAccess().getXINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitPositionCommand__YAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitPositionCommandAccess().getYINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getInitPositionCommandAccess().getYINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitHeadingCommand__HeadingAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitHeadingCommandAccess().getHeadingHeadingKindParserRuleCall_1_0()); }
	ruleHeadingKind{ after(grammarAccess.getInitHeadingCommandAccess().getHeadingHeadingKindParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitBoardSizeCommand__WidthAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBoardSizeCommandAccess().getWidthINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getInitBoardSizeCommandAccess().getWidthINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitBoardSizeCommand__HeightAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBoardSizeCommandAccess().getHeightINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getInitBoardSizeCommandAccess().getHeightINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedCommand__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedCommandAccess().getDocDocumentationCommentParserRuleCall_0_0()); }
	ruleDocumentationComment{ after(grammarAccess.getUserDefinedCommandAccess().getDocDocumentationCommentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedCommand__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedCommandAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getUserDefinedCommandAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedCommand__StatementsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedCommandAccess().getStatementsStatementParserRuleCall_5_0()); }
	ruleStatement{ after(grammarAccess.getUserDefinedCommandAccess().getStatementsStatementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Main__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getMainAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedCommandStatement__CommandAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedCommandStatementAccess().getCommandUserDefinedCommandCrossReference_0_0()); }
(
{ before(grammarAccess.getUserDefinedCommandStatementAccess().getCommandUserDefinedCommandIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getUserDefinedCommandStatementAccess().getCommandUserDefinedCommandIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getUserDefinedCommandStatementAccess().getCommandUserDefinedCommandCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getConditionConditionExprParserRuleCall_2_0()); }
	ruleConditionExpr{ after(grammarAccess.getIfStatementAccess().getConditionConditionExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__StatementsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getStatementsStatementParserRuleCall_5_0()); }
	ruleStatement{ after(grammarAccess.getIfStatementAccess().getStatementsStatementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseStatementsAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseStatementsStatementParserRuleCall_7_2_0()); }
	ruleStatement{ after(grammarAccess.getIfStatementAccess().getElseStatementsStatementParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterateStatement__TimesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateStatementAccess().getTimesINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getIterateStatementAccess().getTimesINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterateStatement__StatementsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateStatementAccess().getStatementsStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getIterateStatementAccess().getStatementsStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getConditionConditionExprParserRuleCall_2_0()); }
	ruleConditionExpr{ after(grammarAccess.getWhileStatementAccess().getConditionConditionExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__StatementsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getStatementsStatementParserRuleCall_5_0()); }
	ruleStatement{ after(grammarAccess.getWhileStatementAccess().getStatementsStatementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__TextAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentationCommentAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getDocumentationCommentAccess().getTextSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandStatement__KindAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandStatementAccess().getKindCommandKindParserRuleCall_0_0()); }
	ruleCommandKind{ after(grammarAccess.getCommandStatementAccess().getKindCommandKindParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpr__NegationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExprAccess().getNegationExclamationMarkKeyword_0_0()); }
(
{ before(grammarAccess.getConditionExprAccess().getNegationExclamationMarkKeyword_0_0()); }

	'!' 

{ after(grammarAccess.getConditionExprAccess().getNegationExclamationMarkKeyword_0_0()); }
)

{ after(grammarAccess.getConditionExprAccess().getNegationExclamationMarkKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpr__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExprAccess().getExprConditionKindParserRuleCall_1_0()); }
	ruleConditionKind{ after(grammarAccess.getConditionExprAccess().getExprConditionKindParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


